type Query {
  me: User
  tasks(searchString: String): [Task!]!
  Task(id: ID!): Task
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createTask(text: String!): Task
  updateTask(id: ID!, text: String, completed: Boolean): Task
  deleteTask(id: ID!): Task
}

type AuthPayload {
  token: String!
  user: User!
}

# The `User` type is a reduced version ("mask") of the `User` type from the data model (and database schema).
# It does not expose the `createdAt`, `updatedAt` and `password` fields.
type User {
  id: ID!
  email: String!
  name: String
}


type Task {
  id: ID!
  text: String!
  completed: Boolean!
  author: User!
}